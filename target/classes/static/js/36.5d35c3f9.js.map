{"version":3,"file":"js/36.5d35c3f9.js","mappings":"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","sources":["webpack://yggdrasil-client/./src/store/services/document.servive.js","webpack://yggdrasil-client/./src/types/DocumentStatus.js","webpack://yggdrasil-client/./src/views/DocumentStructureView.vue","webpack://yggdrasil-client/./src/views/DocumentStructureView.vue?b593"],"sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = process.env.VUE_APP_API_URL + \"api/v1/documents/\";\r\n\r\nclass DocumentService {\r\n  getDocument(documentId) {\r\n    return axios.get(API_URL + `${documentId}`, { headers: authHeader() })\r\n  }\r\n  getDocuments(typeSearch, params, currentPage, sortField, sortDir, statusName, minDate, maxDate, documentType) {\r\n    let data = JSON.stringify({\r\n      \"typeSearch\": typeSearch,\r\n      \"parameter\": params,\r\n      \"currentPage\" : currentPage,\r\n      \"sortField\": sortField,\r\n      \"sortDir\": sortDir,\r\n      \"statusName\": statusName,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n      \"documentType\": documentType\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `all`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.post(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n  getDocumentStructures() {\r\n    return axios.get(API_URL + 'structures/short', { headers: authHeader() })\r\n  }\r\n  getDocumentStructure(structureId) {\r\n    return axios.get(API_URL + `structures/${structureId}`, { headers: authHeader() })\r\n  }\r\n  createDocument(username, documentStructureId, documentStatusId, documentData) {\r\n    let data = JSON.stringify({\r\n      \"documentData\": JSON.stringify(documentData),\r\n      \"documentStatusId\": Number(documentStatusId),\r\n      \"documentStructureId\": Number(documentStructureId),\r\n      \"username\": username\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + 'create',\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n  deleteDocument(documentId) {\r\n    return axios.delete(API_URL + 'delete/'+documentId, { headers: authHeader() })\r\n  }\r\n  // updateDocumentStatus(documentId, documentStatusId) {\r\n  //   return axios.post(API_URL + `${documentId}/status/update`, { data: Number(documentStatusId), headers: authHeader() })\r\n  // }\r\n  \r\n  updateDocumentStatus(documentId, documentStatusId) {\r\n    let data = JSON.stringify({\r\n      \"documentStatusId\": JSON.stringify(documentStatusId),\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `${documentId}/status/update`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  updateDocumentData(documentId, documentData) {\r\n    let data = JSON.stringify({\r\n      \"documentData\": JSON.stringify(documentData),\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `${documentId}/data/update`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  getUserStatistics(userId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `statistic/user/${userId}`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.get(API_URL + `statistic/user/${userId}`, { headers: authHeader() })\r\n  }\r\n\r\n  getDepartmentStatistics(departmentId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `statistic/department/${departmentId}`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.get(API_URL + `statistic/department/${departmentId}`, { headers: authHeader() })\r\n  }\r\n\r\n  getFacultayStatistics(facultyId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `statistic/faculty/${facultyId}`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.get(API_URL + `statistic/faculty/${facultyId}`, { headers: authHeader() })\r\n  }\r\n\r\n  getAllStatistics(minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `statistic/all`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.get(API_URL + `statistic/all`, { headers: authHeader() })\r\n  }\r\n\r\n  getAllDocumentTypes() {\r\n    return axios.get(API_URL + 'types/all', { headers: authHeader() });\r\n  }\r\n\r\n  checkDocumentTypeName(documentTypeName) {\r\n    let data = JSON.stringify({\r\n      \"name\": documentTypeName,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `types/check`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  createDocumentType(documentTypeName) {\r\n    let data = JSON.stringify({\r\n      \"name\": documentTypeName,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `types/create`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  getAdminDocumentStructures(parameter, currentPage, sortField, sortDir, isActive, minDate, maxDate, documentTypeName) {\r\n    let data = JSON.stringify({\r\n      \"parameter\": parameter,\r\n      \"currentPage\" : currentPage,\r\n      \"sortField\": sortField,\r\n      \"sortDir\": sortDir,\r\n      \"isActive\": isActive,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n      \"documentTypeName\": documentTypeName,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `structures/short/admin`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n    // return axios.get(API_URL + 'structures/short/admin', { headers: authHeader() })\r\n  }\r\n\r\n  createDocumentStructure(id, name, description, documentTypeId, structureData) {\r\n    let data = JSON.stringify({\r\n      \"id\": id,\r\n      \"name\": name,\r\n      \"description\": description,\r\n      \"documentTypeId\": documentTypeId,\r\n      \"structureData\": JSON.stringify(structureData)\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `structures/create`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  updateDocumentStructure(id, name, description, documentTypeId, structureData) {\r\n    let data = JSON.stringify({\r\n      \"id\": id,\r\n      \"name\": name,\r\n      \"description\": description,\r\n      \"documentTypeId\": documentTypeId,\r\n      \"structureData\": JSON.stringify(structureData)\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `structures/update`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  updateStatusDocumentStructure(id, isActive) {\r\n    let data = JSON.stringify({\r\n      \"id\": id,\r\n      \"isActive\": Boolean(isActive)\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `structures/status/update`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  checkDocumentStructure(documentStructureId) {\r\n    return axios.get(API_URL + `structures/${documentStructureId}/check`, { headers: authHeader() });\r\n  }\r\n\r\n  updateStatusDocumentsByStructureId(id) {\r\n    let data = JSON.stringify({\r\n      \"id\": id\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `status/update/remake`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  getNewDocumentStructures(oldDocumentStructureId) {\r\n    let data = JSON.stringify({\r\n      \"oldDocumentStructureId\": oldDocumentStructureId\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `structures/new/all`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  getAllFacultyDocuments(documentStructureId, facultyId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"documentStructureId\": documentStructureId,\r\n      \"facultyId\": facultyId,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `faculty/all`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  getAllDepartmentDocuments(documentStructureId, departmentId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"documentStructureId\": documentStructureId,\r\n      \"departmentId\": departmentId,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `department/all`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  archivingDocuments(documentStructureId, documentStatusId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"documentStructureId\": documentStructureId,\r\n      \"documentStatusId\": documentStatusId,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `archiving`,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  documentExportToExcel(documentStructures, facultyId, departmentId, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"documentStructures\": documentStructures,\r\n      \"facultyId\": facultyId,\r\n      \"departmentId\": departmentId,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `export`,\r\n      headers: authHeader(),\r\n      responseType: 'blob',\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  documentCombinedExportToExcel(documentStructures, facultyList, departmentList, minDate, maxDate) {\r\n    let data = JSON.stringify({\r\n      \"documentStructures\": documentStructures,\r\n      \"facultyList\": facultyList,\r\n      \"departmentList\": departmentList,\r\n      \"minDate\": minDate,\r\n      \"maxDate\": maxDate,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `combined/export`,\r\n      headers: authHeader(),\r\n      responseType: 'blob',\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n\r\n  updateDocumentType(documentTypeId, documentTypeName) {\r\n    let data = JSON.stringify({\r\n      \"documentTypeName\": documentTypeName,\r\n    });\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: API_URL + `types/update/` + documentTypeId,\r\n      headers: authHeader(),\r\n      data : data\r\n    };\r\n    \r\n    return axios.request(config);\r\n  }\r\n}\r\n\r\nexport default new DocumentService();","export const DocumentStatus = {\r\n  Draft: 1,\r\n  Ready: 2,\r\n  Remake: 3,\r\n  Archive: 4,\r\n  1: 'Черновик',\r\n  2: 'Готов',\r\n  3: 'Переделать',\r\n  4: 'Архив',\r\n  'Черновик': 1,\r\n  'Готов': 2,\r\n  'Переделать': 3,\r\n  'Архив': 4\r\n}","<template>\r\n  <FullScreenLoader v-if=\"this.createDocumentProcess\"/>\r\n  <div class=\"chapter-name text-3xl mb-6\">\r\n    Создание документа — Выбор шаблона\r\n  </div>\r\n  <div class=\"flex gap-x-5 flex-grow\">\r\n    <div class=\"menu w-1/5\">\r\n      <Sidebar />\r\n    </div>\r\n    <div class=\"w-4/5 flex flex-col mb-6\">\r\n      <div class=\"menu-top mb-6\">\r\n        <router-link to=\"/documents\" class=\"main-btn py-3 px-5 inline-flex\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 mr-1\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18\" />\r\n          </svg>\r\n          Вернуться\r\n        </router-link>\r\n      </div>\r\n      <!-- <div class=\"search flex gap-x-5 mb-6\">\r\n        <form action=\"\" method=\"get\" class=\"shadow-md rounded-xl flex items-stretch w-full border\">\r\n          <input type=\"text\" name=\"search-text\" id=\"\" placeholder=\"Поиск\" class=\"rounded-l-xl py-3 pl-5 block flex-grow shrink focus:outline-none focus:ring-2 focus:ring-[var(--color-main)]\">\r\n          <button type=\"submit\" class=\"main-btn-invers block shrink px-7 rounded-r-xl\">Найти</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"main-table-menu mb-6\">\r\n        <ul class=\"main-table-list flex flex-row-reverse\">\r\n          <li class=\"main-table-item\">\r\n            <button class=\"main-btn py-3 px-5 flex\" @click=\"refresh\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 mr-1\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\" />\r\n              </svg>\r\n              Обновить\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div> -->\r\n      <MainTable :header=\"this.header\" :content=\"this.content\" :noDataMessage=\"this.noDataMessage\" @updateParent=\"onUpdateRadioValue\" ref=\"mainTable\"/>\r\n      <div class=\"flex gap-6\" v-if=\"!this.loading\">\r\n        <div class=\"left-item flex-grow\">\r\n          <!-- Пагинация -->\r\n        </div>\r\n        <div class=\"right-item\">\r\n          <!-- <router-link :to=\"{name: 'documentCreate', params: {structureId: this.radioValue}}\" class=\"main-btn py-3 px-5 inline-flex items-center\" v-bind:disabled=\"this.radioValue === 0\">\r\n            <div>Продолжить</div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 ml-1 block\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3\" />\r\n            </svg>\r\n          </router-link> -->\r\n          <button class=\"main-btn py-3 px-5 inline-flex items-center\" v-bind:disabled=\"this.radioValue === 0\" @click.prevent=\"createDraftDocument\">\r\n            <div>Продолжить</div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 ml-1 block\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from '@/components/app/Sidebar.vue'\r\nimport MainTable from '@/components/app/MainTable.vue'\r\nimport DocumentService from '@/store/services/document.servive'\r\nimport messages from '@/utils/messages'\r\nimport { DocumentStatus } from '@/types/DocumentStatus'\r\n\r\nexport default {\r\n  name: 'DocumentsStructuresView',\r\n  data: () => ({\r\n    loading: true,\r\n    content: [],\r\n    header: [\"\",\"№ шаблона\", \"Наименование структуры\", \"Описание\", \"Дата создания\"],\r\n    noDataMessage: \"По вашему запросу структуры документов не найдены\",\r\n    radioValue: 0,\r\n    message: '',\r\n    createDocumentProcess: false,\r\n    documentData: { data: {}}\r\n  }),\r\n  async mounted() {\r\n    await DocumentService.getDocumentStructures().then(\r\n      (response) => {\r\n        for(const item of response.data) {\r\n          this.content.push([\r\n            {\r\n              'type': 'radio',\r\n              'id': item.id\r\n            },\r\n            {\r\n              'type': 'lable',\r\n              'text': item.id\r\n            },\r\n            {\r\n              'type': 'lable',\r\n              'text': item.name\r\n            }\r\n            ,\r\n            {\r\n              'type': 'lable',\r\n              'text': item.description\r\n            }\r\n            ,\r\n            {\r\n              'type': 'lable',\r\n              'text': this.$normaldate(item.dateCreate)\r\n            }\r\n          ])\r\n        }\r\n      },\r\n      (error) => {\r\n        this.message = (error.response && error.response.data && error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        this.$error(messages[this.message] || 'Что-то пошло не так');\r\n      }\r\n    ).finally(\r\n      this.loading = false\r\n    )\r\n  },\r\n  methods: {\r\n    onUpdateRadioValue(data) {\r\n      this.radioValue = data;\r\n    },\r\n    async createDraftDocument() {\r\n      this.createDocumentProcess = true;\r\n      let structureData;\r\n      let intermediateData = {userResponse:[]};\r\n      await DocumentService.getDocumentStructure(this.radioValue).then(\r\n      (response) => {\r\n        structureData = response.data.structure;\r\n        while (typeof structureData === 'string') {\r\n          structureData = JSON.parse(structureData);\r\n        }\r\n        \r\n        for(let dataItem of structureData.data) {\r\n          let obj = {};\r\n          obj[dataItem.id] = typeof dataItem.defaultValue === undefined ? \"\" : dataItem.defaultValue === undefined ? \"\" : dataItem.defaultValue;\r\n          intermediateData.userResponse.push(obj);\r\n        }\r\n      },\r\n      (error) => {\r\n        this.message = (error.response && error.response.data && error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        this.$error(messages[this.message] || 'Что-то пошло не так');\r\n      });\r\n      await DocumentService.createDocument(this.$store.state.auth.user.username, this.radioValue, DocumentStatus.Draft, intermediateData).then(\r\n      (response) => {\r\n        this.documentData = response.data;\r\n      },\r\n      (error) => {\r\n        this.message = (error.response && error.response.data && error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        this.$error(messages[this.message] || 'Что-то пошло не так');\r\n      })\r\n      this.$router.push({name: 'document', params: {documentId: this.documentData.id}})\r\n    },\r\n    async refresh() {\r\n      this.loading = true;\r\n      this.content = [];\r\n      this.radioValue = 0;\r\n      this.$refs.mainTable.clearRadioButton();\r\n      await DocumentService.getDocumentStructures().then(\r\n        (response) => {\r\n          for(const item of response.data) {\r\n            this.content.push([\r\n              {\r\n                'type': 'radio',\r\n                'id': item.id\r\n              },\r\n              {\r\n                'type': 'lable',\r\n                'text': item.id\r\n              },\r\n              {\r\n                'type': 'lable',\r\n                'text': item.name\r\n              }\r\n              ,\r\n              {\r\n                'type': 'lable',\r\n                'text': item.description\r\n              }\r\n              ,\r\n              {\r\n                'type': 'lable',\r\n                'text': this.$normaldate(item.dateCreate)\r\n              }\r\n            ])\r\n          }\r\n        },\r\n        (error) => {\r\n          this.message = (error.response && error.response.data && error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          this.$error(messages[this.message] || 'Что-то пошло не так');\r\n        }\r\n      ).finally(\r\n        this.loading = false,\r\n      )\r\n    }\r\n  },\r\n  \r\n  components: {\r\n    Sidebar,\r\n    MainTable\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./DocumentStructureView.vue?vue&type=template&id=d0fd1174\"\nimport script from \"./DocumentStructureView.vue?vue&type=script&lang=js\"\nexport * from \"./DocumentStructureView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\web\\\\2023\\\\yggdrasile\\\\yggdrasil-client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["API_URL","process","DocumentService","getDocument","documentId","axios","headers","authHeader","getDocuments","typeSearch","params","currentPage","sortField","sortDir","statusName","minDate","maxDate","documentType","data","JSON","stringify","config","method","maxBodyLength","Infinity","url","getDocumentStructures","getDocumentStructure","structureId","createDocument","username","documentStructureId","documentStatusId","documentData","Number","deleteDocument","updateDocumentStatus","updateDocumentData","getUserStatistics","userId","getDepartmentStatistics","departmentId","getFacultayStatistics","facultyId","getAllStatistics","getAllDocumentTypes","checkDocumentTypeName","documentTypeName","createDocumentType","getAdminDocumentStructures","parameter","isActive","createDocumentStructure","id","name","description","documentTypeId","structureData","updateDocumentStructure","updateStatusDocumentStructure","Boolean","checkDocumentStructure","updateStatusDocumentsByStructureId","getNewDocumentStructures","oldDocumentStructureId","getAllFacultyDocuments","getAllDepartmentDocuments","archivingDocuments","documentExportToExcel","documentStructures","responseType","documentCombinedExportToExcel","facultyList","departmentList","updateDocumentType","DocumentStatus","Draft","Ready","Remake","Archive","_createElementVNode","class","xmlns","fill","viewBox","stroke","d","_hoisted_11","_hoisted_12","createDocumentProcess","_createBlock","_component_FullScreenLoader","key","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_Sidebar","_hoisted_4","_hoisted_5","_component_router_link","to","_hoisted_6","_component_MainTable","header","content","noDataMessage","onUpdateParent","$options","onUpdateRadioValue","ref","loading","_createElementBlock","_hoisted_7","_hoisted_8","_hoisted_9","disabled","radioValue","onClick","_cache","_withModifiers","args","createDraftDocument","message","async","then","response","item","this","push","$normaldate","dateCreate","error","toString","$error","messages","finally","methods","intermediateData","userResponse","structure","parse","dataItem","obj","undefined","defaultValue","$store","state","auth","user","$router","$refs","mainTable","clearRadioButton","components","Sidebar","MainTable","__exports__","render"],"sourceRoot":""}